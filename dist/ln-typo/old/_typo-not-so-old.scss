// required for trimming
.#{map-get($typo-classes, 'container')} { min-height: 1px; }

///////////
// MIXIN //
///////////

@mixin typo($font-size: 0, $line-height: auto, $margin: 0, $char-height: 1){

  // get classes
  $single: map-get($typo-classes, 'single');
  $block: map-get($typo-classes, 'block');
  $container: map-get($typo-classes, 'container');

  // normalize font-size; NB change the size() function
  $font-size: if(unitless($font-size), size($font-size), if(unit($font-size) == 'px', rem($font-size), $font-size));

  // normalize line-height
  @if $line-height == 'auto' {
    $sub-lines: $typo-sub-lines or ceil($font-size);
    $rel-height: medium-value('line-height') / unit-strip($font-size);
    $line-height: $rel-height * ceil($typo-min-height / $rel-height * $sub-lines) / $sub-lines;
  }

  font-size: $font-size;
  line-height: $line-height;
  margin-top: 0;
  margin-bottom: 0;

  $typo-curr-size: $font-size !global;
  $typo-curr-height: $line-height !global;

  &.#{$single} {
    line-height: 1;
    margin-top: 0;
    margin-bottom: 0;
  }
  &.#{$block} {
    margin-top: t-margin(0rem, $line-height, $char-height);
    margin-bottom: t-margin(0rem, $line-height, $char-height);
  }
  .#{$container} & {
    @content;
    margin-top: margin($margin);
    margin-bottom: t-margin(0rem, $line-height, $char-height);
    &:first-child, &.first {
      margin-top: t-margin(0rem, $line-height, $char-height);
    }
  }

  $typo-curr-size: null !global;
  $typo-curr-height: null !global;
}

// alias
// @mixin t($args...) { @include typo($args...) { @content; } }
