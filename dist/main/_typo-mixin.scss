// TODO
// rename the main mixins:
// typo-setup
// typo-scope
// typo

// TODO
// - is there a reliable way to integrate css-columns?
// - is there a reliable way to integrate outriding elements?


//////////
// typo //
//////////

$typo-selectors: '[class*="typo--"]', '.typo' !default;
$curr-typo-block: false !default;

@mixin typo($m: $curr-mult-y-key) {
  $parent: &;
  #{if($parent!=null,'&',$typo-selectors)} > * + * { margin-top: mult-y($m) * mval('margin-y'); }
  $prev-mult-y-key: $curr-mult-y-key;
  $curr-mult-y-key: $m !global;
  $curr-typo-block: if($parent!=null, true, false) !global;
  @content;
  $curr-mult-y-key: $prev-mult-y-key !global;
  $curr-typo-block: false !global;
}

////////////////
// typo-child //
////////////////

@mixin typo-child($s: null, $l: null, $f: null) {

  $prev-size-val: $curr-size-val;
  $prev-line-val: $curr-line-val;
  $prev-font-val: $curr-font-val;

  $size: size($s);
  $curr-size-val: $size !global;

  $line: line($l);
  $curr-line-val: $line !global;

  $font: if($f != 'base', font($f), null);
  $curr-font-val: $font !global;

  $font-family: if($font, map-get($font, 'font-family'), null);
  $size-adjust: if($font, map-get($font, 'size-adjust') or 1, 1);
  $size-unit: if($curr-typo-block, 'em', 'rem');

  font-family: $font-family;
  font-size: unit-assert($size, $size-unit) * $size-adjust;
  line-height: $line * mval('line-height');

  $typo-selectors: if($curr-typo-block,'',$typo-selectors);
  @if not $curr-typo-block { @at-root #{sel-insert-parents($typo-selectors)} { font-size: unit-assert($size, em) * $size-adjust; } }
  // @at-root #{sel-insert-parents($typo-selectors,'> * +')} { margin-top: t-margin(); }
  @at-root #{sel-insert-parents($typo-selectors,'>')} {
    margin-top: t-margin(0);
    margin-bottom: t-margin(0);
    @include adj-to { margin-top: t-margin(); }
    @content;
  }

  $curr-size-val: $prev-size-val !global;
  $curr-line-val: $prev-line-val !global;
  $curr-font-val: $prev-font-val !global;
}

//////////////////
// typo-child-x //
//////////////////

// extends existing classes
@mixin typo-child-x($s:'base', $l:'auto', $f: 'base') {
  @at-root & {
    @extend .s#{mod-class($s)};
    @if $l != 'auto' { @extend .l#{mod-class($l)}; }
    @if $f != 'base' { @extend .f--#{$f}; }
  }
  [class*='typo'] & {
    $prev-size-key: $curr-size-key;
    $prev-line-key: $curr-line-key;
    $prev-font-key: $curr-font-key;
    $curr-size-key: $s !global;
    $curr-line-key: $l !global;
    $curr-font-key: $f !global;
    @content;
    $curr-size-key: $prev-size-key !global;
    $curr-line-key: $prev-line-key !global;
    $curr-font-key: $prev-font-key !global;
  }
}

///////////
// FONTS //
///////////


// font face mixin
@mixin font-face($family, $dir, $file, $style, $weight) {
  @font-face {
    font-family: $family;
    font-style: $style;
    font-weight: $weight; // this should be both word and number values
    src: url('#{$dir}#{$file}.eot'); // IE9 Compat Modes
    src: url('#{$dir}#{$file}.eot?#iefix') format('embedded-opentype'),
       url('#{$dir}#{$file}.svg##{$file}') format('svg');
       //url('#{$dir}#{$file}.woff') format('woff'),
       // url('#{$dir}#{$file}.svg##{$file}') format('svg'),
       // url('#{$dir}#{$file}.ttf') format('truetype');
  }
}

