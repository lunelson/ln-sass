///////////
// typo //
///////////

// todo: test typo on lists and tables
//     - can you still style lists and tables properly
//     - protocol for defining local stuff

@mixin typo($s: $curr-size-key, $l: $curr-line-key, $f: $curr-font-key) {

  $same-size-key: ($s == $curr-size-key);
  $same-line-key: ($l == $curr-line-key);
  $same-font-key: ($f == $curr-font-key);

  $prev-size-key: $curr-size-key;
  $prev-line-key: $curr-line-key;
  $prev-font-key: $curr-font-key;

  $curr-size-key: $s !global;
  $curr-line-key: $l !global;
  $curr-font-key: $f !global;

  $size: size($s);
  $line: line($l);

  $font: if($f, font($f), null);
  $font-family: if($font, map-get($font, 'font-family'), null);
  $size-adjust: if($font, map-get($font, 'size-adjust') or 1, 1);

  font-family: $font-family;
  line-height: $line * medium-value('line-height') / $size-adjust;

  // if in a stack
  @if $curr-stack-sel {
    font-size: unit-assert($size, em) * $size-adjust;
    @at-root #{insert-parents('','>')} {
      margin-top: typo-margin-em(0);
      margin-bottom: typo-margin-em(0);
      @include adjacent-to('*') { margin-top: typo-margin-ex(); }
      @content;
    }
  }

  // if not in a stack
  @else {
    font-size: unit-assert($size, rem) * $size-adjust;
    @at-root #{insert-parents('.stack' '%stack')} {
      font-size: unit-assert($size, em) * $size-adjust;
    }
    @at-root #{insert-parents('.stack' '%stack', '>')} {
      margin-top: typo-margin-em(0);
      margin-bottom: typo-margin-em(0);
    }
    $mults: medium-value('mults-y') or medium-value('mults');
    @each $m, $mult in map-merge((base: 1), $mults) {
      $stack-sel: '.stack#{multify($m)}';
      @at-root #{insert-parents($stack-sel,'>')} {
        @at-root #{insert-parents('*', '+')} {
          margin-top: typo-margin-ex(if($m=='base',1,$m));
        }
        @content;
      }
    }
  }

  $curr-size-key: $prev-size-key !global;
  $curr-line-key: $prev-line-key !global;
  $curr-font-key: $prev-font-key !global;
}
