// MEDIA OBJECT INIT

@mixin setup-media-object(){

  // backup $base
  $base-orig: $base !global;

  // merge $base against defaults, normalize units
  $base: normalize-medium(map-merge((
    font-size: 16px,
    line-height: 1.5,
    font-size-mod: 1.5,
    margin-x: 1rem,
    margin-x-mod: 2,
    margin-y: 1rem,
    margin-y-mod: 2,
    page-top: 1rem,
    page-right: 1rem,
    page-bottom: 1rem,
    page-left: 1rem,
    // line-length: 30,
    // column-ratio: 1 // n.b. wherever this is less than one, will override breakpoint
  ), $base)) !global;

  // backup $media; if media is not empty, proceed
  $media-orig: $media !global;

  @if $media != () {

    // temp variable for recursive merging
    $current: $base;

    // collect and sort the breakpoint media ; TODO -- change to sassdash
    // $sorted-media: maps-sort(maps-collect($media, 'breakpoint'), 'breakpoint');
    // !!! above is obsolete, if we are now allowing typo-columns to retro-determine breakpoint

    @each $alias, $medium in $media {

      // merge current medium against ref-medium and normalize units
      $current: normalize-medium(map-merge($current, $medium));

      // calc and merge additional props
      $breakpoint: map-get($current, 'breakpoint');
      $page-x: map-get($current, 'page-right') + map-get($current, 'page-left');

      // $line-length: map-get($current, 'line-length');
      // $column-ratio: map-get($medium, 'column-ratio'); // spec medium only
      // @if $column-ratio and $column-ratio < 1 {
      //   $margin-x: map-get($current, 'margin-x');
      //   $breakpoint: unit-assert((($line-length) / $column-ratio  - $margin-x + $page-x) * $html-scale, em); // correct ?
      //   $current: map-merge($current, ('breakpoint': $breakpoint))
      // }

      $body-width: unit-assert($breakpoint / map-get($current, 'html-scale'), rem);
      $current: map-merge($current, (
        'body-width': $body-width,
        'content-width': $body-width - $page-x
      ));

      // merge reference back to master
      $media: map-merge($media, ($alias: $current)) !global;

    }
  }

  // check if breakpoint order is okay; warn if not
  // $keys-sorted: map-keys(maps-sort($media, 'breakpoint'));
  // $keys-orig: map-keys($media-orig);
  // @if $keys-sorted != $keys-orig { @warn 'breakpoints out of order; should be #{$keys-sorted}.'; }

}

