@import '../../dist/ln-util/all';
@import '../../dist/ln-media/all';
@import '../../dist/ln-layout/all';

$base: (
  font-size: 16px,
  line-height: 1.5,
  font-size-mod: 1.5,
  margin-x: 1rem,
  margin-x-mod: 2,
  margin-y: 1rem,
  margin-y-mod: 2,
  page-top: 1rem,
  page-right: 1rem,
  page-bottom: 1rem,
  page-left: 1rem,
);

$media: (
  mobile: (
    breakpoint: 20em
  ),
  phablet: (
    breakpoint: 30em
  ),
  tablet: (
    breakpoint: 48em),
  desktop: (
    breakpoint: 64em
  ),
  desktop2: (
    breakpoint: 80em
  ),
  desktop3: (
    breakpoint: 100em
  )
);


@include setup-media();
@include setup-layout();

/* $media: #{map-inspect($media)} */

$mixins: ();

@mixin dummy($arg: 0) {

  $id: get($mixins, 'dummy', $arg);

  @if not $id {
    $id: unique-id();
    $mixins: merge($mixins, 'dummy', $arg, $id) !global;
    @at-root %#{$id} {
      margin: $arg + em;
    }
  }
  @extend %#{$id};
}

.grid--lg {
  @include grid(2);
}
.cell--lg {
  @include cell(2);
}



.test-grid {
  @include grid(2) {
    .test-cell {
      @include cell();
    }
  }
}

// ----
// libsass (v3.3.0-beta2)
// ----

@mixin foo($out: false) {
  @if $out {
    @at-root { @content; }
  }
}

@mixin bar() {
  @at-root { @content; }
}

.test {
  @include foo(true) {
    // color: blue;
    .nest {
      color: red;
    }
  }
  @include bar() {
    .nest2 {
      color: green;
    }
  }
}
/*

.page
.page--h, .page--x
.page--v, .page--y
.page--left

page:
h v x y top right bottom left

wrap:
join(map-keys($media), (each))
to from

.wrap, [wrap--]
.wrap--each
.wrap--alpha
.wrap--to-alpha
.wrap--from-beta
.wrap--from-delta

row, cell:
sm lg xl

.row--0
.cell--0

.row--lg
.cell--lg

.grid--0

.cell--0
.cell--sm
.cell--lg

.sect--lg
.sect--sm

header.site-header(role="banner" class="page")

@include wrap(each)

.test {
    @include grid(-1) {
        .sub {
            @include cell();
        }
    }
}
 */