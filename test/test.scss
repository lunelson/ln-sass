@import "../lib/sass-list-maps/sass-list-maps";
@import "../lib/mathsass/dist/_math";
@import "../sass-ln";

$base: (
  font-size 16px,
  line-height 1.33,
  margin-y 1.25rem,
  body-top 0,
  body-bottom 0,
  body-right 0.75rem,
  body-left 0.75rem,
);

$queries: (
  width (
    alpha (
      min-width 20em,
    ),
    beta (
      min-width 30em,
      margin-y 1.5rem,
      line-height 1.4,
      body-right 1rem,
      body-left 1rem,
    ),
    gamma (
      min-width 48em,
      font-size 18px,
    ),
    delta (
      min-width 64em,
      font-size 20px,
    ),
    epsilon (
      min-width 80em,
    ),
  ),
  height (
  )
);

$fonts: (
  main (
    definition (
      font-family (sans-serif),
      letter-spacing 0.0125em
    ),
    metrics (
      size-modifier 1,
      capline (10 0.06, 100 0.12),
      baseline (10 0.12, 128 0.12)
    )
  )
);

// 1. setup base; add any particulars as content
@include setup-base(); // render-base(); or do-base();

// 2. setup queries; 'false' means no outputs
@include setup-queries(); // render-queries(); or do-queries();

// 3. setup sizes and margins
// @include setup-sizes(factor 1.33, steps 2);
@include setup-sizes-from-to(null gamma, factor 1.333, steps 2);
@include setup-sizes-from-to(gamma delta, factor 1.667, steps 2);
@include setup-sizes-from-to(delta, factor 2, steps 2);

// @include setup-sizes(from root, to gamma, factor 1.333, steps 2);
// @include setup-sizes(from gamma, factor 1.333, steps 2);

@include setup-margins-from-to(null gamma, factor 2, steps 2);
@include setup-margins-from-to(gamma, factor 3, steps 2);

// @include setup-margins(from root, to gamma, factor 2, steps 2);
// @include setup-margins(from gamma, factor 3, steps 2);

// 4a. setup typo by class/alias
@include set-typo('h1', size 3);
@include set-typo('h2', size 2);
@include set-typo('h3', size 1);
@include set-typo('h4' 'p', size 0, from root, to gamma);
@include set-typo('h4' 'p', size 1, from gamma);
@include set-typo('h5', size -1);
@include set-typo('compact', size -1, margin -2, from root);
@include set-typo('h6', size -1);

// 4b. render typo
// @include render-typo();

// 5. setup grids
@include setup-grid(); // render-grid();

///////////
// DEBUG //--------------------------------
///////////

// .base { debug: map-pretty($base); }
// .query { debug: map-pretty(get($queries, width)); }
// .query { debug: map-pretty(get($queries-orig, width)); }


//////////////
// HEADINGS //
//////////////

// %hn { font-weight: normal; font-weight: 400; }
h1 { @extend %hn; @include typo('h1'); }
h2 { @extend %hn; @include typo('h2'); }
h3 { @extend %hn; @include typo('h3'); }
h4 { @extend %hn; @include typo('h4'); }
h5 { @extend %hn; @include typo('h5'); }
h6 { @extend %hn; @include typo('h6'); }

@each $hn in h1 h2 h3 h4 h5 h6 {
  #{$hn} { @include adjacent(p, ul, ol, dl, table, img, figure) {
    margin-top: trim-top($hn) + get-margin(1); }
  }
}

////////////////
// PARAGRAPHS //
////////////////

p {
  @include typo('p') {
    p + & { text-indent: 1em; }
    @include query-for('line-height') {
      p + & {
        margin-top: 0 - t-value('trim-bottom');
      }
    }
    @include query-for(margin, line-height) {
      @include adjacent(img, figure) {
        margin-top: trim-top() + get-margin(1);
      }
    }
  }
}

///////////
// OTHER //
///////////

%p { @include typo('p'); }

ul, ol, dl, table { @extend %p; }

img, figure {
  margin-top: get-margin(1);
  // margin-top: get-margin(0);
  display: block;
  max-width: 100%;
  height: auto;
}

figure {
  -webkit-margin-before: 0;
  -webkit-margin-after: 0;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  figcaption { @include typo('compact'); }
}

////////////
// LAYOUT //
////////////

.wrap--site {
  @include wrap();
  @include query(alpha) { max-width: get(get-query(),'content-width'); }
  @include query(beta) { max-width: get(get-query(),'content-width'); }
  @include query(gamma) { max-width: get(get-query(),'content-width'); }
  @include query(delta) { max-width: get(get-query(),'content-width'); }
  padding-top: 2rem;
  background-color: whitesmoke;
  // padding-top: 1px;
  overflow: hidden;
  // overflow-y: hidden;
}

.trimbox {
  margin-top: 0.5rem;
  overflow: hidden;
  background-color: lightgray;
}
