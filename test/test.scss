@import "../lib/sass-list-maps/sass-list-maps";
@import "../lib/mathsass/dist/_math";
@import "../sass-ln";

$base: (
  font-size 16px,
  line-height 1.4,
  margin-y 1rem,
  body-top 0,
);

$queries: (
  width (
    alpha (
      min-width 20em,
    ),
    beta (
      min-width 30em,
    ),
    gamma (
      min-width 48em,
      margin-y 1.5rem,
    ),
    delta (
      min-width 64em,
    ),
    epsilon (
      min-width 80em,
    ),
  ),
  height (
  )
);

$fonts: (
  main (
    definition (
      font-family (sans-serif),
      letter-spacing 0.0125em
    ),
    metrics (
      size-modifier 1,
      capline (10 0.06, 100 0.12),
      baseline (10 0.12, 128 0.12)
    )
  )
);

// 1. setup base; add any particulars as content
@include setup-base(); // render-base(); or do-base();

// 2. setup queries; 'false' means no outputs
@include setup-queries(); // render-queries(); or do-queries();

// 0. setup sizes
@include setup-sizes(( // set-sizes((...)); / set-sizes-from((...));
  'factor' 2,
  'steps' 2,
));

@include setup-margins-from(null gamma, ( // set-margins((...)); / set-margins-from((...));
  'factor' 2,
  'steps' 2,
));

@include setup-margins-from(gamma, (
  'factor' 3,
  'steps' 2,
));

// 4a. setup typo by class/alias
@include set-typo('h1' 'large',(size 4));
@include set-typo-from(null beta, 'h2' 'mlarge', (size 2));
@include set-typo-from(beta, 'h2' 'mlarge' 'large', (size 3));
@include set-typo('h3', (size 4));
@include set-typo('h4' 'p' 'ul' 'ol' 'dl', (size 3));
@include set-typo('h5', (size 2));
@include set-typo('h6', (size 1));

// 4b. render typo
// @include render-typo();

// 5. setup grids
@include setup-grid(); // render-grid();

///////////
// DEBUG //--------------------------------
///////////

// .base { debug: map-pretty($base); }
// .query { debug: map-pretty(get($queries, width)); }
// .query { debug: map-pretty(get($query-orig, width)); }

%hn { font-weight: normal; font-weight: 400; }

.h1, h1 { @extend %hn; @include apply-typo('h1'); }
.h2, h2 { @extend %hn; @include apply-typo('h2'); }
.h3, h3 { @extend %hn; @include apply-typo('h3'); }
.h4, h4 { @extend %hn; @include apply-typo('h4'); }
.h5, h5 { @extend %hn; @include apply-typo('h5'); }
.h6, h6 { @extend %hn; @include apply-typo('h6'); }

p, %p { @include apply-typo('p'); }

ul { @extend %p; }

img, figure {
  margin-top: get-margin();
}

figure {
  -webkit-margin-before: 0;
  -webkit-margin-after: 0;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  // figcaption { @include get-typo('h5'); }
}

.wraptest > * {
  @include wrap();
  width: 60%;
  padding-top: 2rem;
  // background-color: pink;
  // padding-top: 1px;
  // overflow-x: visible;
  // overflow-y: hidden;
}

.trimbox {
  margin-top: 0.5rem;
  overflow: hidden;
  background-color: lightgray;
}