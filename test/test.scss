@import "../lib/sass-list-maps/sass-list-maps";
@import "../lib/mathsass/dist/_math";
@import "../sass-ln";

////////////////
// PARAMETERS //
////////////////

$margin-default: m4;

$base-data: (
  font-size 18px,
  line-height 1.4,
  margin-y 2rem,
  body-right 2rem,
  body-left 2rem
);

$query-data: (
  width (
    alpha (
      min-width 20em,
      line-height 1.5,
    ),
    beta (
      min-width 30em,
      line-height 1.6,
    ),
    gamma (
      min-width 48em,
      font-size 20px,
    ),
    delta (
      min-width 64em,
    ),
    epsilon (
      min-width 80em,
    ),
  ),
  height (
  )
);

$typo-data: (
  main (
    definition (
      font-family (sans-serif),
      letter-spacing 0.0125em
    ),
    metrics (
      size-modifier 1,
      capline (32 0.115, 128 0.145),
      baseline (32 0.095, 128 0.105)
    )
  )
);

// 1. setup base; add any particulars as content
@include setup-base(false){}

// 2. setup queries; 'false' means no outputs
@include setup-query(false);

// 0. setup sizes
@include setup-sizes((
  'factor' 1.6,
  'steps' 2,
  'offset' 3,
));

$size-default: s3; // same as the offset above

// 3. setup margins
@include set-margins((
  'factor' 1.6,
  'steps' 2,
  'offset' 4,
));

@include query(alpha) {
  @include set-margins((
    'factor' 1.6,
    'steps' 2,
    'offset' 4,
  ));
}

// 4. setup typo by class/alias
// h1 { @include set-typo(h1, s6); }
// h2 { @include set-typo(h2, s5); }
// h3 { @include set-typo(h3, s4); }
// h4 { @include set-typo(h4, s3); }
// h5 { @include set-typo(h5, s2); }
// h6 { @include set-typo(h6, s1); }

.query-current-alias { debug: $query-current-alias; }
.base { debug: map-pretty($base-data); }
.query { debug: map-pretty(get($query-data, width)); }

// // 5. setup grids
// @include setup-grid();

// %hn { font-weight: normal; font-weight: 400; }

// .giga { @include typo('giga'); }
// .mega { @include typo('mega'); }
// .kilo { @include typo('kilo'); }

// .h1, h1 { @extend %hn; @include typo('h1'); }
// .h2, h2 { @extend %hn; @include typo('h2'); }
// .h3, h3 { @extend %hn; @include typo('h3'); }
// .h4, h4 { @extend %hn; @include typo('h4'); }
// .h5, h5 { @extend %hn; @include typo('h5'); }
// .h6, h6 { @extend %hn; @include typo('h6'); }

// p, %p { @include typo('h4'); }

// //           88              88
// //           88              88
// //           88              88
// //   ,adPPYb,88   ,adPPYba,  88,dPPYba,   88       88   ,adPPYb,d8
// //  a8"    `Y88  a8P_____88  88P'    "8a  88       88  a8"    `Y88
// //  8b       88  8PP"""""""  88       d8  88       88  8b       88
// //  "8a,   ,d88  "8b,   ,aa  88b,   ,a8"  "8a,   ,a88  "8a,   ,d88
// //   `"8bbdP"Y8   `"Ybbd8"'  8Y"Ybbd8"'    `"YbbdP'Y8   `"YbbdP"Y8
// //                                                      aa,    ,88
// //                                                       "Y8bbdP"

// .sizes-and-margins {
//   // @for $n from 1 through 6 {
//   //   margin-#{$n}: margin(m#{$n});
//   // }
//   // @for $n from 1 through 6 {
//   //   size-#{$n}: size(s#{$n});
//   // }
//   // mg: map-pretty(get(get-query(), 'margin-y'));
//   // mg-a: map-pretty($margin-assignments);
//   sz: map-pretty($sizes);
//   sz-a: map-pretty($size-assignments);
// }


// // @include set-query-typo(gamma, h6, s2);
// // --- should create an extension point only for


// // .query-values {
// //   line-height: get-query-value('line-height');
// //   gamma-line-height: get-query-value('line-height', width gamma);
// //   html-scale: get-query-value('html-scale');
// //   rem-test: rem(32px);
// //   px-test: px(2rem);
// //   @include query-hd() {
// //     color: red;
// //   }
// //   @include query(gamma) {
// //     html-scale: get-query-value('html-scale');
// //     rem-test: rem(32px);
// //     px-test: px(2rem);
// //     unittest: unit(32px);
// //     query-current: $query-current-alias;
// //     line-height: get-query-value('line-height');
// //   }
// // }