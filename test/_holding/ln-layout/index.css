/*

setup-grid
  grid-placeholders
  grid-extensions
setup-page
  page-placeholders
  page-extensions



$layout-mixins: ();
@mixin grid()
  - check map-get()
@mixin grid-size()
@mixin cell()
@mixin cell-size()

*/
html {
  font-size: 1em; }

body {
  line-height: 1.5; }

body::before {
  width: 0;
  height: 0;
  display: block;
  overflow: hidden;
  content: 'base'; }

head {
  font-family: 'base'; }

.media-trans {
  width: 0px;
  transition: width 1ms; }

@media (min-width: 20em) {
  body::before {
    content: "alpha"; }
  head {
    font-family: "alpha"; }
  .media-trans {
    width: 1px; } }

@media (min-width: 30em) {
  body::before {
    content: "beta"; }
  head {
    font-family: "beta"; }
  .media-trans {
    width: 0px; } }

@media (min-width: 48em) {
  body::before {
    content: "gamma"; }
  head {
    font-family: "gamma"; }
  .media-trans {
    width: 1px; } }

@media (min-width: 64em) {
  body::before {
    content: "delta"; }
  head {
    font-family: "delta"; }
  .media-trans {
    width: 0px; } }

@media (min-width: 80em) {
  body::before {
    content: "epsilon"; }
  head {
    font-family: "epsilon"; }
  .media-trans {
    width: 1px; } }

.cf:after,
.wrap:after,
[class*="wrap--"]:after,
[class*="page--"]:after {
  content: "";
  display: table;
  clear: both; }

.page--top {
  padding-top: 1rem; }

.page--right {
  padding-right: 1rem; }

.page--bottom {
  padding-bottom: 1rem; }

.page--left {
  padding-left: 1rem; }

.page--x, .page--h {
  padding-left: 1rem;
  padding-right: 1rem; }

.page--y, .page--v {
  padding-top: 1rem;
  padding-bottom: 1rem; }

.wrap, [class*="wrap--"] {
  margin-left: auto;
  margin-right: auto; }

.wrap--left {
  margin-left: 0; }

.wrap--right {
  margin-right: 0; }

@media screen and (min-width: 20em) {
  .wrap--each,
  .wrap--alpha,
  .wrap--from-alpha, .wrap--to-alpha, .wrap--to-beta, .wrap--to-gamma, .wrap--to-delta, .wrap--to-epsilon {
    max-width: 18rem; } }

@media screen and (min-width: 30em) {
  .wrap--each,
  .wrap--beta,
  .wrap--from-alpha, .wrap--from-beta, .wrap--to-beta, .wrap--to-gamma, .wrap--to-delta, .wrap--to-epsilon {
    max-width: 28rem; } }

@media screen and (min-width: 48em) {
  .wrap--each,
  .wrap--gamma,
  .wrap--from-alpha, .wrap--from-beta, .wrap--from-gamma, .wrap--to-gamma, .wrap--to-delta, .wrap--to-epsilon {
    max-width: 46rem; } }

@media screen and (min-width: 64em) {
  .wrap--each,
  .wrap--delta,
  .wrap--from-alpha, .wrap--from-beta, .wrap--from-gamma, .wrap--from-delta, .wrap--to-delta, .wrap--to-epsilon {
    max-width: 62rem; } }

@media screen and (min-width: 80em) {
  .wrap--each,
  .wrap--epsilon,
  .wrap--from-alpha, .wrap--from-beta, .wrap--from-gamma, .wrap--from-delta, .wrap--from-epsilon, .wrap--to-epsilon {
    max-width: 78rem; } }

.grid, .grid--lg {
  width: calc(100% + 1rem);
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  position: relative;
  font-size: 0rem;
  text-align: left; }
  .grid:before, .grid--lg:before {
    display: none; }
  .grid > *, .grid--lg > * {
    font-size: 1rem; }

.cell, .cell--lg {
  min-height: 1px;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  width: 100%;
  display: inline-block;
  vertical-align: top; }

@media screen and (min-width: 64em) {
  .grid, .grid--lg {
    width: calc(100% + 3rem);
    margin-left: -1.5rem;
    margin-right: -1.5rem; }
  .cell, .cell--lg {
    padding-left: 1.5rem;
    padding-right: 1.5rem; } }

.grid--lg {
  margin-left: 1rem;
  margin-right: 1rem; }
  @media screen and (min-width: 64em) {
    .grid--lg {
      margin-left: 3rem;
      margin-right: 3rem; } }

.cell--lg {
  padding-left: -1rem;
  padding-right: -1rem; }
  @media screen and (min-width: 64em) {
    .cell--lg {
      padding-left: -3rem;
      padding-right: -3rem; } }

/*

.page
.page--h, .page--x
.page--v, .page--y
.page--left

page:
h v x y top right bottom left

wrap:
join(map-keys($media), (each))
to from

.wrap, [wrap--]
.wrap--each
.wrap--alpha
.wrap--to-alpha
.wrap--from-beta
.wrap--from-delta

row, cell:
sm lg xl

.row--0
.cell--0

.row--lg
.cell--lg

.grid--0

.cell--0
.cell--sm
.cell--lg

.sect--lg
.sect--sm

header.site-header(role="banner" class="page")

@include wrap(each)

.test {
    @include grid(-1) {
        .sub {
            @include cell();
        }
    }
}
 */
