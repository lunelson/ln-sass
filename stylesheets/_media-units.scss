//                     _ _                          _ _
//                    | (_)                        (_) |
//  _ __ ___   ___  __| |_  __ _ ______ _   _ _ __  _| |_ ___
// | '_ ` _ \ / _ \/ _` | |/ _` |______| | | | '_ \| | __/ __|
// | | | | | |  __/ (_| | | (_| |      | |_| | | | | | |_\__ \
// |_| |_| |_|\___|\__,_|_|\__,_|       \__,_|_| |_|_|\__|___/

///////////////
// FUNCTIONS //
///////////////

// function to convert value(s) to rem, following medium scale
@function rem($values...) {
  @if $values == null { @return null; }
  @if type-of(nth($values, 1)) == 'list' { $values: nth($values, 1); }
  $size: strip(medium-value('font-size')); $result: ();
  @each $value in $values {
    @if index('rem' 'em', unit($value)) { $result: append($result, assert($value, rem), 'space'); }
    @else { $result: append($result, assert($value / $size, rem), 'space'); }
  }
  @return if(length($result) > 1, $result, nth($result, 1));
}

// function to convert value(s) to px, following medium scale
@function px($values...) {
  @if $values == null { @return null; }
  @if type-of(nth($values, 1)) == 'list' { $values: nth($values, 1); }
  $size: strip(medium-value('font-size')); $result: ();
  @each $value in $values {
    @if unit($value) == 'px' { $result: append($result, $value, 'space'); }
    @else { $result: append($result, assert($value * $size, 'px'), 'space'); }
  }
  @return if(length($result) > 1, $result, nth($result, 1));
}

@function strip-lite($value){ @return if(unitless($value), $value, $value / (0 * $value + 1)); }

@function relativize($val, $ref: 1) {
  $val-unit: unit($val); $ref-unit: unit($ref);
  $scale: medium-value('html-scale');
  // checks
  @if $ref-unit == '%' { @warn 'cannot relativize value to a relative reference; exiting'; @return $val; }
  @if index($ref-unit $val-unit, 'em') { @warn 'cannot reliably relativize to em reference; plz use rem'; }
  // corrections
  @if $val-unit == '%' { $ref: 100; }
  @else if $val-unit == 'px' and index('em' 'rem', $ref-unit) { $ref: strip-lite($ref) * 16 * $scale; }
  @else if $ref-unit == 'px' and index('em' 'rem', $val-unit) { $ref: strip-lite($ref) / 16 / $scale; }
  @else if not unitless($ref) { $ref: strip-lite($ref); }
  @return strip-lite($val) / $ref;
}
