//  _                         _
// | |                       | |
// | | __ _ _   _  ___  _   _| |_
// | |/ _` | | | |/ _ \| | | | __|
// | | (_| | |_| | (_) | |_| | |_
// |_|\__,_|\__, |\___/ \__,_|\__|
//           __/ |
//          |___/

/////////////
// GLOBALS //
/////////////

$l_pre: 'l--' !default;
$l_page-class: 'page' !default;
$l_wrap-class: 'wrap' !default;
$l_sect-class: 'sect' !default;
$l_grid-class: 'grid' !default;
$l_col-class: 'col' !default;

$l-use-float: false !default; // true | false
$l_grid-align: left !default; // right | left
$l_wrap-align: false !default; // right | left | false

$l_margin-x: 1rem !default;
// $l_margin-x_sm: -1 !default;
// $l_margin-x_lg: 1 !default;

$l_margin-y: 1rem !default;
// $l_margin-y_sm: -1 !default;
// $l_margin-y_lg: 1 !default;

// $l_margin-stepvalue: 1 !default;

$l_page-top: 1rem !default;
$l_page-right: 1rem !default;
$l_page-bottom: 1rem !default;
$l_page-left: 1rem !default;

/////////////////
// GRID MIXINS //
/////////////////

@mixin grid-size($cols) {
  &::before { content: '#{$cols} .col'; }
}
// alias
@mixin grid-width($args...) { @include grid-size($args...); }

@mixin grid-set($args...) {
  @extend %#{$l_grid-class};
  @if length($args) > 0 { @include grid-size($args...); }
}

@mixin col-size($span: 1 1, $right: null, $left: null, $cycle: null, $out: null) {
  @if type-of($span) == 'map' { @include col-size($span...); } @else {

  $n: nth($span, 1); $d: nth($span, 2);
  width: $n / $d * 100%;

  @if $right { margin-right: nth($right, 1) / if(length($right) > 1, nth($right, 2), $d) * 100%; }
  @if $left { margin-left: nth($left, 1) / if(length($left) > 1, nth($left, 2), $d) * 100%; }
  @if $cycle { &:nth-child(#{$cycle}n+1) { clear: left; } }
  @else if $out { position: absolute; #{opposite($out)}: 100%; }

  }
}
// alias
@mixin col-width($args...) { @include col-size($args...); }
@mixin width($args...) { @include col-size($args...); }


@mixin col-set($args...) {
  @extend %#{$l_col-class};
  @if length($args) > 0 { @include col-size($args...); }
}

/////////////////
// SETUP MIXIN //
/////////////////

@mixin parse-layout($output: true){

  @if $output {

    $margin-x: $l_margin-x;
    $margin-y: $l_margin-y;
    $page-top: $l_page-top;
    $page-right: $l_page-right;
    $page-bottom: $l_page-bottom;
    $page-left: $l_page-left;

    // get dimensions from '$base' if it exists
    @if variable-exists('base') {
      $margin-x: get($base, 'margin-x');
      $margin-y: get($base, 'margin-y');
      $page-top: get($base, 'page-top');
      $page-right: get($base, 'page-right');
      $page-bottom: get($base, 'page-bottom');
      $page-left: get($base, 'page-left');
    }

    // PAGE
    .#{$l_pre}#{$l_page-class}_top, [layout~='#{$l_page-class}_top'] {
      padding-top: $page-top;
    }
    .#{$l_pre}#{$l_page-class}_right, [layout~='#{$l_page-class}_right'] {
      padding-right: $page-right;
    }
    .#{$l_pre}#{$l_page-class}_bottom, [layout~='#{$l_page-class}_bottom'] {
      padding-bottom: $page-bottom;
    }
    .#{$l_pre}#{$l_page-class}_left, [layout~='#{$l_page-class}_left'] {
      padding-left: $page-left;
    }
    .#{$l_pre}#{$l_page-class}_x, [layout~='#{$l_page-class}_x'] {
      padding-left: $page-left;
      padding-right: $page-right;
    }
    .#{$l_pre}#{$l_page-class}_y, [layout~='#{$l_page-class}_y'] {
      padding-top: $page-top;
      padding-bottom: $page-bottom;
    }

    // WRAP
    %#{$l_pre}#{$l_wrap-class}, [class*='#{$l_pre}#{$l_wrap-class}'], [layout*='#{$l_wrap-class}'] {
      @include clearfix();
      @if $l_wrap-align != left { margin-left: auto; }
      @if $l_wrap-align != right { margin-right: auto; }
    }
    .#{$l_pre}#{$l_wrap-class}--left, [layout~='#{$l_wrap-class}--left'] { margin-left: 0; }
    .#{$l_pre}#{$l_wrap-class}--right, [layout~='#{$l_wrap-class}--right'] { margin-right: 0; }

    // SECT
    .#{$l_pre}#{$l_sect-class},
    [layout*='#{$l_sect-class}_'],
    [class*='#{$l_pre}#{$l_sect-class}_'] {
      padding-top: $margin-y / 2;
      padding-bottom: $margin-y / 2;
    }

    // GRID
    %#{$l_pre}#{$l_grid-class},
    .#{$l_pre}#{$l_grid-class},
    [layout*='#{$l_grid-class}_'],
    [class*='#{$l_pre}#{$l_grid-class}_'] {
      &:before { display: none; }
      width: calc(100% + #{$margin-x}); // necessary?
      position: relative; // avoidable?
      margin-left: $margin-x / -2;
      margin-right: $margin-x / -2;
      @if $l-use-float {
        @include clearfix();
      } @else {
        font-size: 0rem;
        & > * { font-size: 1rem; }
      }
    }

    // COL
    %#{$l_pre}#{$l_col-class},
    .#{$l_pre}#{$l_col-class},
    [layout*='#{$l_col-class}_'],
    [class*='#{$l_pre}#{$l_col-class}_'] {
      width: 100%;
      min-height: 1px; // http://css-tricks.com/make-sure-columns-dont-collapse-horizontally/
      padding-left: $margin-x / 2;
      padding-right: $margin-x / 2;
      @if $l-use-float {
        display: block;
        float: $l_grid-align;
      } @else {
        display: inline-block;
        text-align: $l_grid-align;
        vertical-align: top;
      }
    }

    @if variable-exists('media') {

      @each $alias, $medium in $media {
        $margin-x: get($medium, 'margin-x');
        $margin-y: get($medium, 'margin-y');
        $page-top: get($medium, 'page-top');
        $page-right: get($medium, 'page-right');
        $page-bottom: get($medium, 'page-bottom');
        $page-left: get($medium, 'page-left');

        @include medium($alias) {

          $orig: medium-orig();

          // PAGE
          .#{$l_pre}#{$l_page-class}_top { @if map-has-key($orig, 'page-top') { padding-top: $page-top; } }
          .#{$l_pre}#{$l_page-class}_right { @if map-has-key($orig, 'page-right') { padding-right: $page-right; } }
          .#{$l_pre}#{$l_page-class}_bottom { @if map-has-key($orig, 'page-bottom') { padding-bottom: $page-bottom; } }
          .#{$l_pre}#{$l_page-class}_left { @if map-has-key($orig, 'page-left') { padding-left: $page-left; } }
          .#{$l_pre}#{$l_page-class}_x {
            @if map-has-key($orig, 'page-left') { padding-left: $page-left; }
            @if map-has-key($orig, 'page-right') { padding-right: $page-right; }
          }
          .#{$l_pre}#{$l_page-class}_y {
            @if map-has-key($orig, 'page-top') { padding-top: $page-top; }
            @if map-has-key($orig, 'page-bottom') { padding-bottom: $page-bottom; }
          }

          // SECT
          @if map-has-key($orig, 'margin-y') {
            .#{$l_pre}#{$l_sect-class},
            [layout*='#{$l_sect-class}_'],
            [class*='#{$l_pre}#{$l_sect-class}_'] {
              padding-top: $margin-y / 2;
              padding-bottom: $margin-y / 2;
            }
          }

          // WRAP
          $media-keys: map-keys($media); $wrap_to: (); $wrap_fr: ();
          @each $alias in slice($media-keys, 1, index($media-keys, $alias)) {
            $wrap_fr: append($wrap_fr, unquote('.#{$l_pre}#{$l_wrap-class}_from--#{$alias}'), 'comma');
            $wrap_fr: append($wrap_fr, unquote('[layout~="#{$l_wrap-class}_from--#{$alias}"]'), 'comma');
          }
          @each $alias in slice($media-keys, index($media-keys, $alias), length($media-keys)) {
            $wrap_to: append($wrap_to, unquote('.#{$l_pre}#{$l_wrap-class}_to--#{$alias}'), 'comma');
            $wrap_to: append($wrap_to, unquote('[layout~="#{$l_wrap-class}_to--#{$alias}"]'), 'comma');
          }
          .#{$l_pre}#{$l_wrap-class}_all,
          [layout~='#{$l_wrap-class}_all'],
          .#{$l_pre}#{$l_wrap-class}_each,
          [layout~='#{$l_wrap-class}_each'],
          .#{$l_pre}#{$l_wrap-class}_at--#{$alias},
          [layout~='#{$l_wrap-class}_at--#{$alias}'],
          #{$wrap_fr}, #{$wrap_to} {
            max-width: medium-value('content-width');
          }

          // GRID, CELL
          @if map-has-key($orig, 'margin-x') {
            %#{$l_pre}#{$l_grid-class},
            .#{$l_pre}#{$l_grid-class},
            [layout*='#{$l_grid-class}_'],
            [class*='#{$l_pre}#{$l_grid-class}_'] {
              width: calc(100% + #{$margin-x}); // necessary?
              margin-left: $margin-x / -2;
              margin-right: $margin-x / -2;
            }
            %#{$l_pre}#{$l_col-class},
            .#{$l_pre}#{$l_col-class},
            [layout*='#{$l_col-class}_'],
            [class*='#{$l_pre}#{$l_col-class}_'] {
              padding-left: $margin-x / 2;
              padding-right: $margin-x / 2;
            }
          }
        }
      }
    }
  }

}
