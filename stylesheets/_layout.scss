//  _                         _
// | |                       | |
// | | __ _ _   _  ___  _   _| |_
// | |/ _` | | | |/ _ \| | | | __|
// | | (_| | |_| | (_) | |_| | |_
// |_|\__,_|\__, |\___/ \__,_|\__|
//           __/ |
//          |___/

/////////////
// GLOBALS //
/////////////

$l_body-class: 'l_page' !default;
$l_wrap-class: 'l_wrap' !default;
$l_sect-class: 'l_sect' !default;
$l_grid-class: 'l_grid' !default;
$l_col-class: 'l_col' !default;

$l_grid-is-float: false !default; // true | false
$l_grid-align: left !default; // right | left
$l_wrap-align: false !default; // right | left | false

$l_margin-x: 1rem !default;
$l_margin-y: 1rem !default;

$l_body-top: 1rem !default;
$l_body-right: 1rem !default;
$l_body-bottom: 1rem !default;
$l_body-left: 1rem !default;

/////////////////
// SETUP MIXIN //
/////////////////

@mixin parse-layout($output: true){

  @if $output {

    $margin-x: $l_margin-x;
    $margin-y: $l_margin-y;

    $body-top: $l_body-top;
    $body-right: $l_body-right;
    $body-bottom: $l_body-bottom;
    $body-left: $l_body-left;

    // get dimensions from '$base' if it exists
    @if variable-exists('base') {
      $margin-x: get($base, 'margin-x');
      $margin-y: get($base, 'margin-y');
      $body-top: get($base, 'body-top');
      $body-right: get($base, 'body-right');
      $body-bottom: get($base, 'body-bottom');
      $body-left: get($base, 'body-left');
    }

    // SPREAD, WRAP, GRID, CELL
    // %#{$l_body-class}, .#{$l_body-class}, [class*='#{$l_body-class}--'] {
    //   padding-top: $body-top;
    //   padding-right: $body-right;
    //   padding-bottom: $body-bottom;
    //   padding-left: $body-left;
    // }

    // PAGE
    .#{$l_body-class}--top {
      padding-top: $body-top;
    }
    .#{$l_body-class}--right {
      padding-right: $body-right;
    }
    .#{$l_body-class}--bottom {
      padding-bottom: $body-bottom;
    }
    .#{$l_body-class}--left {
      padding-left: $body-left;
    }
    .#{$l_body-class}--x {
      padding-left: $body-left;
      padding-right: $body-right;
    }
    .#{$l_body-class}--y {
      padding-top: $body-top;
      padding-bottom: $body-bottom;
    }
    // WRAP
    %#{$l_wrap-class}, .#{$l_wrap-class}, [class*='#{$l_wrap-class}--'] {
      @if $l_wrap-align != left { margin-left: auto; }
      @if $l_wrap-align != right { margin-right: auto; }
    }
    .#{$l_wrap-class}--left { margin-left: 0; }
    .#{$l_wrap-class}--right { margin-right: 0; }
    // SECT
    %#{$l_sect-class}, .#{$l_sect-class}, [class*='#{$l_sect-class}--'] {
      padding-top: $margin-y / 2;
      padding-bottom: $margin-y / 2;
      // &:first-child { padding-top: 0; }
      // &:last-child { padding-top: 0; }
    }
    .#{$l_sect-class}--top { padding-top: 0; }
    .#{$l_sect-class}--bottom { padding-bottom: 0; }
    // GRID
    %#{$l_grid-class}, .#{$l_grid-class}, [class*='#{$l_grid-class}--'] {
      // width: calc(100% + #{$margin-x}); // necessary?
      margin-left: $margin-x / -2;
      margin-right: $margin-x / -2;
      @if not $l_grid-is-float {
        font-size: 0rem;
        & > * { font-size: 1rem; }
      }
    }
    // COL
    %#{$l_col-class}, .#{$l_col-class}, [class*='#{$l_col-class}--'] {
      @if $l_grid-is-float {
        display: block;
        float: $l_grid-align;
      } @else {
        display: inline-block;
        text-align: $l_grid-align;
        vertical-align: top;
      }
      width: 100%;
      padding-left: $margin-x / 2;
      padding-right: $margin-x / 2;
    }

    @if variable-exists('media') {

      @each $alias, $medium in $media {
        $margin-x: get($medium, 'margin-x');
        $margin-y: get($medium, 'margin-y');
        $body-top: get($medium, 'body-top');
        $body-right: get($medium, 'body-right');
        $body-bottom: get($medium, 'body-bottom');
        $body-left: get($medium, 'body-left');

        @include medium($alias) {

          $orig: medium-orig();

          // PAGE
          %#{$l_body-class}, .#{$l_body-class}, [class*='#{$l_body-class}--'] {
            @if map-has-key($orig, 'body-left') { padding-left: $body-left; }
            @if map-has-key($orig, 'body-right') { padding-right: $body-right; }
          }

          // SECT
          @if map-has-key($orig, 'margin-y') {
            %#{$l_sect-class}, .#{$l_sect-class}, [class*='#{$l_sect-class}--'] {
              padding-top: $margin-y / 2;
              padding-bottom: $margin-y / 2;
            }
          }

          // WRAP
          .#{$l_wrap-class}--#{$alias}, .#{$l_wrap-class}--each { max-width: medium-value('content-width'); }
          // $keys: map-keys($media); $wrap-each-to: (); $wrap-each-from: ();
          // @each $alias in slice($keys, 1, index($keys, $alias)) {
          //   $wrap-each-from: append($wrap-each-from, unquote('.wrap--each_from--#{$alias}'), 'comma');
          // }
          // @each $alias in slice($keys, index($keys, $alias), length($keys)) {
          //   $wrap-each-to: append($wrap-each-to, unquote('.wrap--each_to--#{$alias}'), 'comma');
          // }
          // .wrap--each, #{$wrap-each-from}, #{$wrap-each-to} { max-width: medium-value('content-width'); }

          // GRID, CELL
          @if map-has-key($orig, 'margin-x') {
            %#{$l_grid-class}, .#{$l_grid-class}, [class*='#{$l_grid-class}--'] {
              // width: calc(100% + #{$margin-x}); // necessary?
              margin-left: $margin-x / -2;
              margin-right: $margin-x / -2;
            }
            %#{$l_col-class}, .#{$l_col-class}, [class*='#{$l_col-class}--'] {
              padding-left: $margin-x / 2;
              padding-right: $margin-x / 2;
            }
          }
        }
      }
    }
  }

}
