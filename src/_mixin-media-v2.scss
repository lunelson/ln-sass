/////////////////////
// MEDIA MIXINS II //
/////////////////////

// TODO: rename / add these V2 mixins
// medium(a,b) / media(a,b)
// media-each($list, $do-head, $do-tail) -> alias above
// media-for($prop, $do-head, $do-tail)
// media-range($min, $max, $do-head, $do-tail)

@mixin medium($min, $max: null) {
  $prev-medium-key: $curr-medium-key;
  $curr-medium-key: $min !global;
  @media #{width-query($min, $max)} { @content }
  $curr-medium-key: $prev-medium-key !global;
}

// todo: rename this to simply 'media' when you've deprecated old media mixins
@mixin media-each($keys: map-keys($media), $add-head: true, $add-tail: true) {
  $set: range-pair-set($keys, $add-head, $add-tail);
  @if length($set) == 0 { @content; }
  @else {
    @each $pair in $set {
      @include medium($pair...) {
        @content;
      }
    }
  }
}

@mixin media-for($props) {
  @include media-each(media-for($props)) {
    @content;
  }
}

@mixin media-slice($start-key: null, $end-key: null) {
  $media-keys: map-keys($media);
  $media-length: length($media-keys);
  $start: if($start-key, index($media-keys, $start-key) or 1, 1);
  $end: if($end-key, index($media-keys, $end-key) or $media-length, $media-length);
  $range: slice($media-keys, $start, $end);
  $add-head: ($start-key or nth($media-keys, $start)) == first($media-keys);
  $add-tail: ($end-key or nth($media-keys, $end)) == last($media-keys);
  @include media-each($range, $add-head, $add-tail) {
    @content;
  }
}
// @mixin typo-media() { @include media-each(media-for(margin-y line-height)) { @content; } }
