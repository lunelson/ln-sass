// LAYOUT GRID INIT

@mixin layout-grid-init() {

  // merge defaults
  $base: map-merge((
    margin-x: 1rem,
  ), if(variable-exists('base'), $base, ()));

  // get values
  $margin-x: map-get($base, 'margin-x');

  // get classes
  $row: map-get($grid-classes, 'row');
  $col: map-get($grid-classes, 'col');

  // row
  .#{$row} {
    &:before { display: none; } // in case of salvattore
    width: calc(100% + #{$margin-x}); // necessary?
    position: relative; // avoidable?
    margin-left: $margin-x / -2;
    margin-right: $margin-x / -2;
    @if $grid-is-float {
      @include clearfix();
    } @else {
      font-size: 0rem;
      & > * { font-size: 1rem; }
    }
  }

  // col
  .#{$col} {
    width: 100%;
    padding-left: $margin-x / 2;
    padding-right: $margin-x / 2;
    @if $grid-is-float {
      min-height: 1px; // http://css-tricks.com/make-sure-columns-dont-collapse-horizontally/
      display: block;
      float: $grid-alignment;
    } @else {
      display: inline-block;
      text-align: $grid-alignment;
      vertical-align: top;
    }
  }

  @if variable-exists('media') {

    @each $alias, $medium in $media {

      @if map-has-key(medium-orig($alias), 'margin-x') {

        $margin-x: map-get($medium, 'margin-x');

        @include medium($alias) {

          // row
          .#{$row} {
            width: calc(100% + #{$margin-x}); // necessary?
            margin-left: $margin-x / -2;
            margin-right: $margin-x / -2;
          }

          // col
          .#{$col} {
            padding-left: $margin-x / 2;
            padding-right: $margin-x / 2;
          }
        }
      }
    }
  }
}
