//  _     _                           _     _
// | |   | |                         (_)   | |
// | |__ | |__   ___ ______ __ _ _ __ _  __| |
// | '_ \| '_ \ / __|______/ _` | '__| |/ _` |
// | |_) | |_) | (__      | (_| | |  | | (_| |
// |_.__/|_.__/ \___|      \__, |_|  |_|\__,_|
//                          __/ |
//                         |___/

$grid-defaults: (
  'margin-x-arg' (0 0),
  'margin-y-arg' (0 0)
) !default;

//////////////////
// FUNDAMENTALS //
//////////////////

@mixin bb-grid-col($output: $query-current-alias){
  @if $output {
    $margin-x: margin-x(get($grid-defaults, 'margin-x-arg')...);
    $margin-y: margin(get($grid-defaults, 'margin-y-arg')...);

    // standard output
    float: left;
    width: 100%;
    padding-left: $margin-x / 2;
    padding-right: $margin-x / 2;
    padding-top: $margin-y / 2;
    padding-bottom: $margin-y / 2;

    // http://css-tricks.com/make-sure-columns-dont-collapse-horizontally/
    min-height: 1px;
    // alt to above
    // margin-top: -1px;
    // padding-top: 1px;
  } @else { @extend %bb-grid-col; }
}

@mixin bb-grid-row($output: $query-current-alias){
  @if $output {
    @include clearfix();
    $margin-x: margin-x(get($grid-defaults, 'margin-x-arg')...);
    $margin-y: margin(get($grid-defaults, 'margin-y-arg')...);

    // standard output
    margin-left: $margin-x / -2;
    margin-right: $margin-x / -2;
    margin-top: $margin-y / -2;
    margin-bottom: $margin-y / -2;

    // counter-action of padding fix above
    // margin-top: -1px;
  } @else { @extend %bb-grid-row; }
}

@mixin bb-grid-wrap($output: $query-current-alias){
  @if $output {
    @include clearfix();
    padding-top: 1px; // fix margin collapsing
    margin-left: auto;
    margin-right: auto;
  } @else { @extend %bb-grid-wrap; }
}

///////////
// SETUP //
///////////

@mixin setup-grid($args...) {

  // BASE
  %grid-col { @include bb-grid-col(true); }
  .col, [class*='col--'], [ln-grid~='col'] { @extend %grid-col; }

  %grid-row { @include bb-grid-row(true); }
  .row, [class*='row--'], [ln-grid~='row'] { @extend %grid-row; }

  %grid-wrap { @include bb-grid-wrap(true); }
  .wrap, [class*='wrap--'], [ln-grid~='wrap'] { @extend %grid-wrap; }
  @each $alias in keys($queries) { [ln-grid~='wrap'][ln-grid~='#{$alias}'], .wrap--#{$alias} { max-width: get($queries, '#{$alias}', 'content-width'); } }

  // PER QUERY
  @each $query-alias in map-keys($queries) {
    $query-orig-keys: keys(get($queries-orig, $query-alias));
    $x-test: contains($query-orig-keys, 'margin-x');
    $y-test: contains($query-orig-keys, 'margin-y');
    @if $x-test or $y-test {
      @include query($query-alias) {
        $margin-x: margin-x(get($grid-defaults, 'margin-x-arg')...);
        $margin-y: margin(get($grid-defaults, 'margin-y-arg')...);
        .col {
          @if $y-test { padding-top: $margin-y / 2; padding-bottom: $margin-y / 2; }
          @if $x-test { padding-left: $margin-x / 2; padding-right: $margin-x / 2; }
        }
        .row {
          @if $y-test { margin-top: $margin-y / -2; margin-bottom: $margin-y / -2; }
          @if $x-test { margin-left: $margin-x / -2; margin-right: $margin-x / -2; }
        }
      }
    }
  }
}

//////////////
// RESIZING //
//////////////

// column sizing
@mixin col-size($span, $offsets...) {
  $n: nth($span, 1); $d: nth($span, 2);
  width: $n / $d * 100%;
  @each $offset in $offsets {
    $dir: nth($offset, 1); $o: nth($offset, 2);
    @if length($offset) > 2 { $d: nth($offset, 3); }
    @if $o == out {
      margin-#{get($opposite, $dir)}: 100%;
      margin-#{$dir}: $n / $d * -100%;
      margin-bottom: -100%; }
    @else { margin-#{$dir}: $o / $d * 100%; }
  }
}

// row sizing -- still refers to salvattore
@mixin row-size($cols: false) {
  @if $cols {
    &::before {
      content: '#{$cols} .col';
      display: none;
    }
  }
}

////////////////////////////////////////////
// APPLICATION -- if not declared in html //
////////////////////////////////////////////

@mixin col($args...) {
  @include bb-grid-col();
  @if $args != () { @include col-size($args...); }
}

@mixin row($args...) {
  @include bb-grid-row();
  @if $args != () { @include row-size($args...); }
}

@mixin wrap() { @include bb-grid-wrap(); }