//             88
//             ""
//
//  ,adPPYba,  88  888888888   ,adPPYba,
//  I8[    ""  88       a8P"  a8P_____88
//   `"Y8ba,   88    ,d8P'    8PP"""""""
//  aa    ]8I  88  ,d8"       "8b,   ,aa
//  `"YbbdP"'  88  888888888   `"Ybbd8"'

// GLOBALS
$size-defaults: (
  'offset' 3,
  'range' 10,
  'spread' 3,
) !default;

///////////////
// FUNCTIONS //
///////////////

// MAIN
@function get-query-size($query-object, $index: 0, $sub-index: 0) {
  $offset: get($size-defaults, 'offset'); $spread: get($size-defaults, 'spread');
  @return nth(get($query-object,'font-size'), ($index + $offset) * $spread + $sub-index);
}

@function get-size($args...) { @return get-query-size(get-query(), $args...); }

// @function get-size($index: 0, $sub-index: 0) {
//   $offset: get($size-defaults, 'offset'); $spread: get($size-defaults, 'spread');
//   @return nth(get(get-query(),'font-size'), ($index + $offset) * $spread + $sub-index);
// }

// ALIAS to MAIN
@function size($args...) { @return get-size($args...); }

////////////
// MIXINS //
////////////

// MASTER
@mixin setup-sizes-from-to($query-aliases, $options...) {

  // options
  $factor: get($options, 'factor') or 2;
  $steps: get($options, 'steps') or 2;

  // defaults
  $range: get($size-defaults, 'range') or 10;
  $spread: get($size-defaults, 'spread') or 3;
  $offset: get($size-defaults, 'offset');
  @if not $offset {
    $offset: floor($range / 3);
    $size-defaults: merge($size-defaults, 'offset' $offset); }

  // query aliases
  $query-alias1: nth($query-aliases, 1); $query-alias2: null;
  @if length($query-aliases) > 1 { $query-alias2: nth($query-aliases, 2); }

  // calculate the size list
  $sizes: (); @for $n from 1 through $range * $spread {
    $size: m-scale($n - $offset * $spread, $factor, $steps * $spread);
    $sizes: append($sizes, $size * 1rem, 'comma');
  }

  // conditional base action
  @if $query-alias1 == null { $base: merge($base, ('font-size' $sizes)); }

  // determine referenced queries
  $query-aliases: map-keys(map-get($queries, 'width'));
  $sliced-query-aliases: slice($query-aliases,
      if($query-alias1, index($query-aliases, $query-alias1), 1),
      if($query-alias2, index($query-aliases, $query-alias2) - 1, length($query-aliases)));

  // per referenced query actions
  $count: 1; @each $query-alias in $sliced-query-aliases {
    $queries: merge($queries, 'width', $query-alias, ('font-size' $sizes));
    @if $count == 1 and $query-alias1 != null { $queries-orig: merge($queries-orig, 'width', $query-alias, ('size-bp' true)); }
    $count: $count + 1;
  }
}

// ALTERNATE
@mixin setup-sizes($options...) { @include setup-sizes-from-to(null, $options...); }